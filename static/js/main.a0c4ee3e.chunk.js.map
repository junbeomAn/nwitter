{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/AuthFrom.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","value","onChange","target","placeholder","required","type","onClick","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","ref","child","uid","uuidv4","attachmentRef","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","nweets","setNweets","useEffect","unsubscribe","onSnapshot","snapshot","nweetArray","docs","map","data","key","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Fragment","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c4ee3e.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this Nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        isOwner && (\r\n          <Fragment>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                value={newNweet}\r\n                onChange={onChange}\r\n                placeholder=\"Edit your Nweet!\"\r\n                required\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet!\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </Fragment>\r\n        )\r\n      ) : (\r\n        <Fragment>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              alt=\"abc\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <Fragment>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </Fragment>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = await storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    };\r\n    setAttachment(\"\");\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n  };\r\n  const onChange = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = event => {\r\n    const {\r\n      target: { files }\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = finishedEvent => {\r\n      const {\r\n        currentTarget: { result }\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        value={nweet}\r\n        maxLength=\"120\"\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" alt=\"nweet\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n      const nweetArray = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map(nweet => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: { name, value }\r\n    } = event;\r\n    if (name === \"email\") setEmail(value);\r\n    else if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create account\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        // log in\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAcount = () => setNewAccount(!newAccount);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create account\" : \"Sign In\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAcount}>\r\n        {newAccount ? \"Sign In\" : \"Create account\"}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"./AuthFrom\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async event => {\r\n    const {\r\n      target: { name }\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n  const onLogout = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n    }\r\n    refreshUser();\r\n  };\r\n  // const getMyNweets = async () => {\r\n  //   const nweets = await dbService\r\n  //     .collection(\"nweets\")\r\n  //     .where(\"creatorId\", \"==\", userObj.uid)\r\n  //     .orderBy(\"createdAt\", \"desc\")\r\n  //     .get();\r\n  //   console.log(nweets.docs.map(doc => doc.data()));\r\n  // };\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Change Your Profile\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogout}>Log Out</button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Fragment } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <Fragment>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </Fragment>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  // isLoggedIn is not necessary anymore cause now we have userObj\n  // so we can save one rendering\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        const { displayName, uid } = user;\n        setUserObj({\n          displayName,\n          uid,\n          updateProfile: args => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const { displayName, uid } = authService.currentUser;\n    setUserObj({\n      displayName,\n      uid,\n      updateProfile: args => authService.currentUser.updateProfile(args)\n    });\n  };\n  return (\n    <div>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing . . .\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}